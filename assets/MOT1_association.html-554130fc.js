import{_ as e,r as i,o as m,c as r,a as s,b as a,d as t,e as l}from"./app-aa9cafec.js";const c="/MLblogs/imgs/2023-08-15-11-19-31-image.png",p="/MLblogs/imgs/2023-08-15-11-16-11-image.png",o="/MLblogs/imgs/2023-08-15-11-29-48-image.png",h="/MLblogs/imgs/2023-08-13-16-03-03-image.png",u="/MLblogs/imgs/2023-08-13-16-04-59-image.png",g="/MLblogs/imgs/2023-08-13-16-05-25-image.png",d="/MLblogs/imgs/2023-08-13-16-08-29-image.png",v="/MLblogs/imgs/2023-08-13-16-08-55-image.png",k={},_=s("div",{class:"custom-container info"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"INFO"),s("p",null,"本专题记录MOT(多目标跟踪)任务中，着重创新点在数据关联部分的论文。")],-1),y=s("h2",{id:"bytetrack",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#bytetrack","aria-hidden":"true"},"#"),a(" ByteTrack")],-1),b=s("p",null,"收录：ECCV 2022",-1),x={href:"https://arxiv.org/abs/2110.06864",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/ifzhang/ByteTrack",target:"_blank",rel:"noopener noreferrer"},M=s("hr",null,null,-1),T=s("p",null,"主要内容：",-1),f=s("p",null,[a("本文提出的gap：当物体被遮挡严重时，外观特征将不再可靠。本文不是提出一种新框架或者模型，而是针对检测分数较低的物体直接被忽略而导致真实物体没被检测到或者轨迹片段增多的现象，提出一种缓解机制，即"),s("strong",null,"对于检测分数较低的物体，使用它们和tracklet的相似度来恢复真实的物体而且过滤背景"),a("。所以本文机制提出的动机是，降低missing detections，保持trajectories的persistence，不是直接过滤掉低分的边界框，而是保留所有框，然后都拿去关联。")],-1),D=s("p",null,"机制分为两个步骤：",-1),z=s("ol",null,[s("li",null,"对于检测分数较高的边界框，基于运动相似度或者外观相似度将其匹配至tracklets中，使用卡尔曼滤波预测tracklet在下一帧中的位置。相似度可以根据predicted box和detection box之间的IOU或REID特征距离来计算。"),s("li",null,"第二步对未匹配的轨迹执行匹配，使用运动相似度匹配（遮挡情况下外观相似度不可靠）。")],-1),O=s("p",null,"目标检测器使用YOLOX，由于算法创新性上不够，所以文章偏向实验以及汇报结果。本文在多个benchmark上做了实验：MOT17, MOT20, HiEve, BDD100K。",-1),L=s("p",null,"具体的关联流程如下：",-1),S=s("ol",null,[s("li",null,[s("p",null,[a("图像输入YOLOX得到物体集合"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"D"),s("mi",null,"k")])]),s("annotation",{encoding:"application/x-tex"},"D_k")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"k")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("；")])]),s("li",null,[s("p",null,[a("对"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"D"),s("mi",null,"k")])]),s("annotation",{encoding:"application/x-tex"},"D_k")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"k")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("中每一个物体，根据预测分数score与阈值（0.6）的大小关系，将其分为"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"D"),s("mrow",null,[s("mi",null,"h"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h"),s("mi",null,"t")])])]),s("annotation",{encoding:"application/x-tex"},"D_{hight}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9694em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"hi"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal mtight"},"h"),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])])])])]),a("和"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"D"),s("mrow",null,[s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"w")])])]),s("annotation",{encoding:"application/x-tex"},"D_{low}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal mtight"},"o"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02691em"}},"w")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("；")])]),s("li",null,[s("p",null,[a("对轨迹集合"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"T")]),s("annotation",{encoding:"application/x-tex"},"T")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T")])])]),a("，使用卡尔曼滤波预测其中每一个轨迹在下一个时间点的位置；")])]),s("li",null,[s("p",null,[a("第一次关联：计算"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"T")]),s("annotation",{encoding:"application/x-tex"},"T")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T")])])]),a("和"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"D"),s("mrow",null,[s("mi",null,"h"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h")])])]),s("annotation",{encoding:"application/x-tex"},"D_{high}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9694em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"hi"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal mtight"},"h")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])])])])]),a("之间的代价矩阵，使用匈牙利算法求解，完成关联。剩下未关联的检测集合为"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"D"),s("mrow",null,[s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"i"),s("mi",null,"n")])])]),s("annotation",{encoding:"application/x-tex"},"D_{remain}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mord mathnormal mtight"},"main")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("和未关联的轨迹集合为"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mrow",null,[s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"i"),s("mi",null,"n")])])]),s("annotation",{encoding:"application/x-tex"},"T_{remain}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mord mathnormal mtight"},"main")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("；")])]),s("li",null,[s("p",null,[a("第二次关联：计算"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mrow",null,[s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"i"),s("mi",null,"n")])])]),s("annotation",{encoding:"application/x-tex"},"T_{remain}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mord mathnormal mtight"},"main")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("和"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"D"),s("mrow",null,[s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"w")])])]),s("annotation",{encoding:"application/x-tex"},"D_{low}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal mtight"},"o"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02691em"}},"w")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("之间的代价矩阵，使用匈牙利算法关联，第二次关联之后还未关联的轨迹集合记为"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mrow",null,[s("mi",null,"r"),s("mi",null,"e"),s("mo",null,"−"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"i"),s("mi",null,"n")])])]),s("annotation",{encoding:"application/x-tex"},"T_{re-remain}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8917em","vertical-align":"-0.2083em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mord mathnormal mtight"},"main")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2083em"}},[s("span")])])])])])])])]),a("；")])]),s("li",null,[s("p",null,[a("过了一段时间（如60帧）之后如果"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mrow",null,[s("mi",null,"r"),s("mi",null,"e"),s("mo",null,"−"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"i"),s("mi",null,"n")])])]),s("annotation",{encoding:"application/x-tex"},"T_{re-remain}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8917em","vertical-align":"-0.2083em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mord mathnormal mtight"},"main")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2083em"}},[s("span")])])])])])])])]),a("还未关联，则删除剩下没有关联的轨迹："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"T"),s("mo",null,"="),s("mi",null,"T"),s("mi",{mathvariant:"normal"},"/"),s("msub",null,[s("mi",null,"T"),s("mrow",null,[s("mi",null,"r"),s("mi",null,"e"),s("mo",null,"−"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"i"),s("mi",null,"n")])])]),s("annotation",{encoding:"application/x-tex"},"T=T/T_{re-remain}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mord"},"/"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mord mathnormal mtight"},"main")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2083em"}},[s("span")])])])])])])])]),a("；")])]),s("li",null,[s("p",null,[a("删除"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"D"),s("mrow",null,[s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"w")])])]),s("annotation",{encoding:"application/x-tex"},"D_{low}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal mtight"},"o"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02691em"}},"w")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("中未关联的检测（认为是背景），将"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"D"),s("mrow",null,[s("mi",null,"h"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h")])])]),s("annotation",{encoding:"application/x-tex"},"D_{high}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9694em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"hi"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal mtight"},"h")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])])])])]),a("中未关联的检测初始化为新的轨迹："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"T"),s("mo",null,"="),s("mi",null,"T"),s("mo",null,"+"),s("msub",null,[s("mi",null,"D"),s("mrow",null,[s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"i"),s("mi",null,"n")])])]),s("annotation",{encoding:"application/x-tex"},"T=T+D_{remain}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mord mathnormal mtight"},"main")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])])])],-1),R=s("p",null,"实现细节：检测分数阈值为0.6。在MOT17、MOT20、HiEve中，使用IOU作为相似度。线性分配步骤，如果检测框和tracklet框之间的IOU小于0.2，则分配失败。对于没有匹配的轨迹，保留30帧。在BDD100K数据集中，使用UniTrack作为REID模型，在消融实验中，使用FastREID提取REID特征。",-1),I=s("p",null,"第一次关联步骤中，作者对IOU和reid两种特征进行对比，在MOT17中，IOU特征MOTA和IDs，而reid有更好的IDF1结果。在BDD100K中，第一步使用REID结果更好，因为这个数据集的摄像头移动严重且帧率低。第二次关联中，使用IOU特征。",-1),E=s("h2",{id:"strongsort",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#strongsort","aria-hidden":"true"},"#"),a(" StrongSORT")],-1),A={href:"https://ieeexplore.ieee.org/document/10032656",target:"_blank",rel:"noopener noreferrer"},C={href:"https://arxiv.org/pdf/2202.13514.pdf",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/dyhBUPT/StrongSORT",target:"_blank",rel:"noopener noreferrer"},P=l('<hr><div align="center"><img src="'+c+`" title="" alt="" data-align="center"></div><p>本文基于DeepSort做改进，除了使用一些常见、有效的trick之外，提出AFLink和GSL。前者用于轨迹的关联（减少轨迹碎片），后者用于替代常规的线性插值。</p><p>技巧上，使用如下部件：</p><ol><li><p>YOLOX-X作为目标检测器</p></li><li><p>EMA（指数移动平均）用于更新tracklet的特征</p></li><li><p>ECC（相机运动补偿）</p></li><li><p>NSA卡尔曼滤波，不同于常规卡尔曼滤波，这种对噪声检测有鲁棒性</p></li><li><p>运动特征和外观特征融合，对二者使用加权相加</p></li><li><p>vanilla global linear assignment。这里的分配规则是对标DeepSORT的分配规则，DeepSORT使用级联匹配的方式(cascade matching)，核心代码如下（进入<code>if</code>的是<code>vanilla matching</code>，进入<code>else</code>的是<code>cascade matching</code>），cascade_depth=30(跟丢之后保留轨迹的时长)，每一个轨迹的<code>time_since_update</code>属性的含义是：该轨迹最近被更新至现在过的时长，单位为帧数。所以看到级联匹配其实就是对不同的<code>time_since_update</code>值的轨迹分别和<code>detection</code>匹配。而vanilla match就是直接全部一遍匹配。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> opt<span class="token punctuation">.</span>woC<span class="token punctuation">:</span>
    track_indices_l <span class="token operator">=</span> <span class="token punctuation">[</span>
        k <span class="token keyword">for</span> k <span class="token keyword">in</span> track_indices
        <span class="token comment"># if tracks[k].time_since_update == 1 + level</span>
    <span class="token punctuation">]</span>
    matches_l<span class="token punctuation">,</span> _<span class="token punctuation">,</span> unmatched_detections <span class="token operator">=</span> \\
        min_cost_matching<span class="token punctuation">(</span>
            distance_metric<span class="token punctuation">,</span> max_distance<span class="token punctuation">,</span> tracks<span class="token punctuation">,</span> detections<span class="token punctuation">,</span>
            track_indices_l<span class="token punctuation">,</span> unmatched_detections<span class="token punctuation">)</span>
    matches <span class="token operator">+=</span> matches_l
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> level <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>cascade_depth<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>unmatched_detections<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>  <span class="token comment"># No detections left</span>
            <span class="token keyword">break</span>

        track_indices_l <span class="token operator">=</span> <span class="token punctuation">[</span>
            k <span class="token keyword">for</span> k <span class="token keyword">in</span> track_indices
            <span class="token keyword">if</span> tracks<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>time_since_update <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">+</span> level
        <span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>track_indices_l<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>  <span class="token comment"># Nothing to match at this level</span>
            <span class="token keyword">continue</span>

        matches_l<span class="token punctuation">,</span> _<span class="token punctuation">,</span> unmatched_detections <span class="token operator">=</span> \\
            min_cost_matching<span class="token punctuation">(</span>
                distance_metric<span class="token punctuation">,</span> max_distance<span class="token punctuation">,</span> tracks<span class="token punctuation">,</span> detections<span class="token punctuation">,</span>
                track_indices_l<span class="token punctuation">,</span> unmatched_detections<span class="token punctuation">)</span>
        matches <span class="token operator">+=</span> matches_les <span class="token operator">+=</span> matches_l
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p></p><p><strong>AFLink</strong>：</p><div align="center"><img src="`+p+'" title="" alt="" data-align="center"></div><p>输入两个轨迹，AFLink模块用于判断两个轨迹是否属于一个轨迹。<strong>Temporal Module</strong>由四层Conv-BN-ReLU组成，其中Conv都是7x1卷积，四层输出通道数分别为：{32, 64, 128, 256}。<strong>Fusion Module</strong>由一层1x3卷积+BN+ReLU组成。</p>',9),N=s("p",null,[a("这里为什么是这样设计？因为文中输入AFLink模块的轨迹形状为："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{separator:"true"},","),s("mn",null,"3"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"[n, 3]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mclose"},"]")])])]),a("，其中n指的是检测的个数，3包含：frame id, x, y。最后对经过了两个模块的轨迹特征池化成向量，拼接，传入MLP-ReLU-MLP预测二者属于同一条轨迹的分数。")],-1),H=s("p",null,"训练AFLink模块的时候有一个数据增强，即将标签轨迹(trajectories)分割成多个轨迹片段(tracklets)，分割的方式是以1:3的概率为正例检测添加时空噪声，换为负例检测。注意，AFLink中两个分支的参数不是共享的。",-1),U=s("p",null,[s("strong",null,"GSI（Gaussian-smoothed interpolation）：")],-1),F=s("p",null,"线性插值不平滑，使用高斯平滑插值轨迹更加平滑：",-1),V=s("div",{align:"center"},[s("img",{src:o,title:"",alt:"","data-align":"center"})],-1),j=s("h2",{id:"tmoh",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#tmoh","aria-hidden":"true"},"#"),a(" TMOH")],-1),G=s("p",null,"收录：CVPR 2021",-1),W={href:"https://openaccess.thecvf.com/content/CVPR2021/papers/Stadler_Improving_Multiple_Pedestrian_Tracking_by_Track_Management_and_Occlusion_Handling_CVPR_2021_paper.pdf",target:"_blank",rel:"noopener noreferrer"},X=l('<p>代码地址：未开源</p><p>本文并未提出什么新颖结构或模型，只是针对遮挡情况分类讨论，对每一种情况都执行一个逻辑上的操作。本文基于Faster R-CNN，用其回归头来回归下一帧中物体的边界框（与Tracktor类似），这类基于回归的跟踪方法根据回归分数s来判断该track是否active，如果s低于一个阈值，则认为该轨迹inactive。作者认为，在遮挡严重的情况下，REID模型提取到的特征可信度不高，所以没有使用REID模型来提取外观特征。</p><div align="center"><img src="'+h+'" title="" alt="" data-align="center"></div><p>文章分析了四种情况会导致s值下降：</p><ol><li><p>图片不清晰或者检测器不够好。如运动模糊、低光照、过小等。</p></li><li><p>遮挡。这里假设遮挡的物体是检测器无法检测到的（如车、建筑等）。</p></li><li><p>遮挡。这里假设是被行人遮挡。</p></li><li><p>行人即将离开相机的视野。</p></li></ol><p>对于第一种和第二种，本文的解决方法是回归inactive track，比如一个active track在t-1帧检测到了，但是第t帧没有检测到就被设置为了inactive，如何得到后续的框呢？将inactive track拿去回归。在NMS阶段，去除严重重叠的轨迹，如果一个active track和inactive track重叠，则优先保留active track，防止active track失活。</p><p>第四种行人即将离开视野时，active track被设置为inactive，但是容易和新进入视野的track弄混，从而重新被激活。对于这种情况，如果回归分数s低于阈值且边界框在图像的边界，计算track的速度向量，如果速度向量方向是图像的边界则该track完成。</p>',7),K=s("p",null,[a("对于第三种情况，如果两个人的边界框分别用下图的蓝色和红色表示，t2时刻，蓝色被红色遮挡，那么被遮挡的变为inactive，状态为occluded，而遮挡的track状态为occluding。t3时刻的时候再次检测到一个物体（黄色边界框），此时将inactive track拿去回归得到回归结果边界框（蓝色虚线），计算虚线边界框和黄色边界框的中心点的距离d，如果d小于阈值"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"d"),s("mrow",null,[s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"x")])])]),s("annotation",{encoding:"application/x-tex"},"d_{max}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8444em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"d"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"ma"),s("span",{class:"mord mathnormal mtight"},"x")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("，则认为黄色框就是被遮挡物体在t3时刻的位置，否则删除该轨迹。")],-1),Y=s("div",{align:"center"},[s("img",{src:u,title:"",alt:"","data-align":"center"})],-1),q=s("div",{align:"center"},[s("img",{src:g,title:"",alt:"","data-align":"center"})],-1),J=s("p",null,[a("当一个active track被设置为inactive之后，会保留一段时间（inactive patience），过了这段时间还是inactive 状态就删除。实验得出，inactive patience设置为50帧效果较好（大概1.7秒）。实验也表明公式中的"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"α")]),s("annotation",{encoding:"application/x-tex"},"\\alpha")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α")])])]),a("设置为1最合适。下表能更直观的看出各个部件的作用：")],-1),Q=l('<div align="center"><img src="'+d+'" title="" alt="" data-align="center"></div><p>regress inactive指的是回归inactive track，对应的是上述第一种和第二种降低回归值s的情况。stop border是物体出于边界区的处理策略（第四种情况）。occlutsion handling是第三种情况。这里的forward和backward指的是按照两种时间顺序来处理序列，forward是按时间增大的方向处理，backward是按时间减小的方向处理。</p><p>这就有个问题了，forward和backward预测结果会有一些偏差，比如本文考虑的两种情况：第一种是前向和反向预测结果中，有两条轨迹严重重叠（每一帧中两条轨迹的IOU值都大于阈值），那么对于重叠部分求平均值合并，因为这种情况最大的可能是对同一个人，两个方向的预测结果有一定的偏差。还有一种情况是部分重叠，作者认为长轨迹正确的可能性更大，所以将重叠部分中更短的轨迹的边界框删除掉，这种情况最大的可能是行人轨迹的交叉。</p><div align="center"><img src="'+v+'" title="" alt="" data-align="center"></div><h2 id="bot-sort" tabindex="-1"><a class="header-anchor" href="#bot-sort" aria-hidden="true">#</a> BoT-SORT</h2><p>收录：CCF None</p>',6),Z={href:"https://arxiv.org/abs/2206.14651",target:"_blank",rel:"noopener noreferrer"},$=s("p",null,"代码地址：未开源",-1),ss=s("h2",{id:"imprasso",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#imprasso","aria-hidden":"true"},"#"),a(" ImprAsso")],-1),as=s("p",null,"收录：CVPR 2023",-1),ns={href:"https://openaccess.thecvf.com/content/CVPR2023W/E2EAD/papers/Stadler_An_Improved_Association_Pipeline_for_Multi-Person_Tracking_CVPRW_2023_paper.pdf",target:"_blank",rel:"noopener noreferrer"},ts=s("p",null,"代码地址：未开源",-1),ls=s("h2",{id:"hybrid-sort",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#hybrid-sort","aria-hidden":"true"},"#"),a(" Hybrid-SORT")],-1),es=s("p",null,"收录：",-1),is={href:"http://arxiv.org/abs/2308.00783",target:"_blank",rel:"noopener noreferrer"},ms={href:"https://github.com/ymzis69/HybirdSORT",target:"_blank",rel:"noopener noreferrer"},rs=s("h2",{id:"sparsetrack",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#sparsetrack","aria-hidden":"true"},"#"),a(" SparseTrack")],-1),cs=s("p",null,"收录：2023",-1),ps={href:"http://arxiv.org/abs/2306.05238",target:"_blank",rel:"noopener noreferrer"},os={href:"https://github.com/hustvl/SparseTrack",target:"_blank",rel:"noopener noreferrer"},hs=s("h2",{id:"dman",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#dman","aria-hidden":"true"},"#"),a(" DMAN")],-1),us=s("p",null,"收录：2019",-1),gs={href:"http://arxiv.org/abs/1902.00749",target:"_blank",rel:"noopener noreferrer"},ds=s("p",null,"代码地址：未开源",-1);function vs(ks,_s){const n=i("ExternalLinkIcon");return m(),r("div",null,[_,y,b,s("p",null,[a("论文地址："),s("a",x,[a("ByteTrack: Multi-Object Tracking by Associating Every Detection Box"),t(n)])]),s("p",null,[a("代码地址："),s("a",w,[a("GitHub - ifzhang/ByteTrack: [ECCV 2022] ByteTrack: Multi-Object Tracking by Associating Every Detection Box"),t(n)])]),M,T,f,D,z,O,L,S,R,I,E,s("p",null,[a("收录："),s("a",A,[a("TMM (IEEE Transactions on Multimedia)"),t(n)]),a(" 2022")]),s("p",null,[a("论文地址："),s("a",C,[a("StrongSORT: Make DeepSORT Great Again"),t(n)])]),s("p",null,[a("代码地址："),s("a",B,[a("GitHub - dyhBUPT/StrongSORT: StrongSORT: Make DeepSORT Great Again"),t(n)])]),P,N,H,U,F,V,j,G,s("p",null,[a("论文地址："),s("a",W,[a("Improving Multiple Pedestrian Tracking by Track Management and Occlusion Handling"),t(n)])]),X,K,Y,q,J,Q,s("p",null,[a("论文地址："),s("a",Z,[a("BoT-SORT: Robust Associations Multi-Pedestrian Tracking"),t(n)])]),$,ss,as,s("p",null,[a("论文地址："),s("a",ns,[a("An Improved Association Pipeline for Multi-Person Tracking"),t(n)])]),ts,ls,es,s("p",null,[a("论文地址："),s("a",is,[a("Hybrid-SORT: Weak Cues Matter for Online Multi-Object Tracking"),t(n)])]),s("p",null,[a("代码地址："),s("a",ms,[a("GitHub - ymzis69/HybirdSORT: Hybrid-SORT: Weak Cues Matter for Online Multi-Object Tracking"),t(n)])]),rs,cs,s("p",null,[a("论文地址："),s("a",ps,[a("SparseTrack: Multi-Object Tracking by Performing Scene Decomposition based on Pseudo-Depth"),t(n)])]),s("p",null,[a("代码地址："),s("a",os,[a("GitHub - hustvl/SparseTrack: Official PyTorch implementation of SparseTrack"),t(n)])]),hs,us,s("p",null,[a("论文地址："),s("a",gs,[a(" Online Multi-Object Tracking with Dual Matching Attention Networks"),t(n)])]),ds])}const bs=e(k,[["render",vs],["__file","MOT1_association.html.vue"]]);export{bs as default};
